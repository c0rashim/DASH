---
title: "NYCTaxi"
author: "심채연(2018-21971)"
format: dashboard
execute: 
  enabled: true
  cache: false
  freeze: false
---

```{python}
#| output: false
import numpy as np
import pandas as pd
import plotly.express as px
import plotly.io as pio

pd.options.plotting.backend = "plotly"
pio.templates.default = "plotly_white"

df = pd.read_csv("https://raw.githubusercontent.com/guebin/DV2023/main/posts/NYCTaxi.csv").assign(
    log_trip_duration = lambda df: np.log(df.trip_duration),
    pickup_datetime = lambda df: df.pickup_datetime.apply(pd.to_datetime),
    dropoff_datetime = lambda df: df.dropoff_datetime.apply(pd.to_datetime),
    dist = lambda df: np.sqrt((df.pickup_latitude-df.dropoff_latitude)**2 + (df.pickup_longitude-df.dropoff_longitude)**2),
    #---#
    vendor_id = lambda df: df.vendor_id.map({1:'A',2:'B'})
).assign(
    speed = lambda df: df.dist / df.trip_duration,
    pickup_hour = lambda df: df.pickup_datetime.dt.hour,
    dropoff_hour = lambda df: df.dropoff_datetime.dt.hour,
    dayofweek = lambda df: df.pickup_datetime.dt.dayofweek, 
    dayofweek_kr=lambda df: df.pickup_datetime.dt.dayofweek.map(lambda x: {0: '월', 1: '화', 2: '수', 3: '목', 4: '금', 5: '토', 6: '일'}.get(x))
)
df_small = df[::100].reset_index(drop=True)
```

# 기말고사1-(1),(2)

```{python}
#| title: 요일,시간에 따른 평균속력 시각화        
pivot_table = df.pivot_table(values='speed', index='dayofweek_kr', columns='pickup_hour', aggfunc='mean')

fig1 = px.imshow(pivot_table, labels=dict(color="Average Speed"), x=pivot_table.columns, y=pivot_table.index,
                color_continuous_scale='Viridis')

fig1.update_layout(
    xaxis_title="Hour of the Day",
    yaxis_title="Day of the Week",
    title="Average Speed by Day of the Week and Hour of the Day"
)

fig1.show()
```

```{python}
#| title: 요일,시간에 따른 평균이동거리 시각화        
pivot_table = df.pivot_table(values='dist', index='dayofweek_kr', columns='pickup_hour', aggfunc='mean')

fig2 = px.imshow(pivot_table, labels=dict(color="Average Distance"), x=pivot_table.columns, y=pivot_table.index,
                color_continuous_scale='Viridis')

fig2.update_layout(
    xaxis_title="Hour of the Day",
    yaxis_title="Day of the Week",
    title="Average Distance by Day of the Week and Hour of the Day"
)

fig2.show()
```

# 기말고사1-(3)

```{python}
#| title: 속력별 경로 시각화
df_small = df_small.assign(speed_quantile=lambda df: pd.qcut(df['speed'], 4, labels=['매우느림', '조금느림', '조금빠름', '매우빠름']))
fig3 = px.line_mapbox(
    data_frame=df_small,
    lat='pickup_latitude',
    lon='pickup_longitude',
    color='speed_quantile',
    line_group='speed_quantile',
    mapbox_style='carto-positron',
    zoom=11
)

for trace in scatter_data:
    fig.add_trace(trace)

fig3.show()
```